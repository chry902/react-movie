{"version":3,"file":"static/js/21.bcbac973.chunk.js","mappings":"uNACA,K,2BCKO,SAASA,EAASC,GACrB,OAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAEMC,GAAWC,EAAAA,EAAAA,MAejB,OAbAC,EAAAA,EAAAA,YAAU,WAQV,IAAoBC,EAAAA,EAPLL,EAQXF,EAAMQ,YAAYD,IAPa,IAA3BL,EAAeO,SACfL,EAAS,OAGd,CAACF,KAQA,iBAAKQ,UAAWC,EAAAA,SAAhB,WACI,4CACA,SAAC,IAAD,CAAgBR,kBAAmBA,EAAmBS,SAAS,YAK3E,S,6HChCA,IAAMC,EAAW,gDAMXC,EAAM,eAACC,EAAD,uDAAM,GAAN,OAAaC,MAAM,GAAD,OAAIH,EAAJ,YAAgBE,IAAME,MAAK,SAACC,GAAD,OAASA,EAAIC,WAGhEC,EAAO,SAACC,GAAD,OACTL,MAAMH,EAAU,CACZS,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBF,KAAMG,KAAKC,UAAUJ,MAIvBK,EAAS,SAACX,GAAD,OAAQC,MAAM,GAAD,OAAIH,EAAJ,YAAgBE,GAAM,CAAEO,OAAQ,YAGtDK,EAAM,SAACZ,EAAIM,GAAL,OACRL,MAAM,GAAD,OAAIH,EAAJ,YAAgBE,GAAM,CACvBO,OAAQ,MACRC,QAAS,CACL,eAAgB,oBAEpBF,KAAMG,KAAKC,UAAUJ,O,4FC3B7B,GAAgB,eAAiB,gC,SCO1B,SAASO,EAAT,GAA4E,IAAlDC,EAAiD,EAAjDA,iBAAkB1B,EAA+B,EAA/BA,kBAAmBS,EAAY,EAAZA,SAIlE,GAA0BX,EAAAA,EAAAA,UAAS,IAAnC,eAAO6B,EAAP,KAAcC,EAAd,KACA,GAAwB9B,EAAAA,EAAAA,UAAS,IAAjC,eAAO+B,EAAP,KAAaC,EAAb,KACA,GAA4BhC,EAAAA,EAAAA,UAAS,IAArC,eAAOiC,EAAP,KAAeC,EAAf,KACA,GAA4BlC,EAAAA,EAAAA,UAAS,IAArC,eAAOmC,EAAP,KAAeC,EAAf,KACA,GAAsCpC,EAAAA,EAAAA,UAAS,IAA/C,eAAOqC,EAAP,KAAoBC,EAApB,KAEMC,EAAoB,SAACJ,GAAD,OAAYA,EAAOK,MAAM,MAG7CC,GADWC,EAAAA,EAAAA,MACQC,SAASH,MAAM,KAAKI,UAAU,GAyCvD,OACI,gBAAKnC,UAAWC,EAAAA,eAAhB,UAGI,kBAAMmC,SA3CM,SAACC,GACjBA,EAAEC,iBAEe,SAAbpC,IACAQ,EAAAA,EAAAA,IAAK,CACDU,MAAAA,EACAE,KAAAA,EACAE,OAAAA,EACAE,OAAQI,EAAkBJ,GAC1BE,YAAAA,IAEJnC,EAAkB,CACdM,SAAS,EACTwC,QAAS,qCAObtB,EAAAA,EAAAA,IAAIe,EAAS,CACTZ,MAAAA,EACAE,KAAAA,EACAE,OAAAA,EACAE,OAAQI,EAAkBJ,GAC1BE,YAAAA,IAEJT,EAAiB,CACbpB,SAAS,EACTwC,QAAS,sCAcgBvC,UAAWC,EAAAA,KAAxC,WACI,kBAAOuC,QAAQ,QAAf,qBACA,kBACI3C,MAAOuB,EACPqB,SAAU,SAACJ,GAAD,OAAOhB,EAASgB,EAAEK,OAAO7C,QACnC8C,KAAK,OACLtC,GAAG,QACHuC,KAAK,QACLC,UAAQ,KAGZ,kBAAOL,QAAQ,OAAf,oBACA,kBACI3C,MAAOyB,EACPmB,SAAU,SAACJ,GAAD,OAAOd,EAAQc,EAAEK,OAAO7C,QAClC8C,KAAK,OACLtC,GAAG,OACHuC,KAAK,OACLC,UAAQ,KAGZ,kBAAOL,QAAQ,SAAf,sBACA,kBACI3C,MAAO2B,EACPiB,SAAU,SAACJ,GAAD,OAAOZ,EAAUY,EAAEK,OAAO7C,QACpC8C,KAAK,OACLtC,GAAG,SACHuC,KAAK,SACLC,UAAQ,KAGZ,kBAAOL,QAAQ,SAAf,sBACA,kBACI3C,MAAO6B,EACPe,SAAU,SAACJ,GAAD,OAAOV,EAAUU,EAAEK,OAAO7C,QACpC8C,KAAK,OACLtC,GAAG,SACHuC,KAAK,SACLC,UAAQ,KAGZ,kBAAOL,QAAQ,cAAf,2BACA,kBACI3C,MAAO+B,EACPa,SAAU,SAACJ,GAAD,OAAOR,EAAeQ,EAAEK,OAAO7C,QACzC8C,KAAK,OACLtC,GAAG,cACHuC,KAAK,cACLC,UAAQ,KAGZ,kBAAOF,KAAK,SAAS9C,MAAM","sources":["Pages/AddMovie/styles.Modul.scss","Pages/AddMovie/AddMovie.jsx","Utils/Http.jsx","webpack://card-movie-react/./src/components/CreateCardForm/styles.module.scss?5186","components/CreateCardForm/form.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import { useState, useEffect } from \"react\";\nimport styles from \"./styles.Modul.scss\";\nimport { useNavigate } from \"react-router-dom\";\nimport { CreateCardForm } from \"../../components/CreateCardForm/form\"\n\n\nexport function AddMovie(props) {\n    const [isModalVisible, setIsModalVisible] = useState(\"\")\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        addSuccess(isModalVisible);\n        if (isModalVisible.visible === true) {\n            navigate(\"/\");\n        };\n        // eslint-disable-next-line\n    }, [isModalVisible])\n\n    function addSuccess(value) {\n        props.editSuccess(value);\n\n    }\n\n    return (\n        <div className={styles.AddMovie}>\n            <h1>ad new movieee</h1>\n            <CreateCardForm setIsModalVisible={setIsModalVisible} callType=\"POST\" />\n\n        </div>\n    );\n}\nexport default AddMovie","const BASE_URL = \"https://edgemony-backend.herokuapp.com/movies\";\n\n// GET\n// const GET = () => fetch(BASE_URL).then((res) => res.json());\n\n// GET\nconst GET = (id = \"\") => fetch(`${BASE_URL}/${id}`).then((res) => res.json());\n\n// POST\nconst POST = (body) =>\n    fetch(BASE_URL, {\n        method: \"POST\",\n        headers: {\n            \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n    });\n\n// DELETE\nconst DELETE = (id) => fetch(`${BASE_URL}/${id}`, { method: \"DELETE\" });\n\n// PUT\nconst PUT = (id, body) =>\n    fetch(`${BASE_URL}/${id}`, {\n        method: \"PUT\",\n        headers: {\n            \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n    });\n\nexport { GET, POST, DELETE, PUT };","// extracted by mini-css-extract-plugin\nexport default {\"CreateCardForm\":\"styles_CreateCardForm__j0Ueu\"};","import { useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n// import { AddMovie } from \"../../Pages/AddMovie/AddMovie\";\nimport { POST, PUT } from \"../../Utils/Http\";\n\n\nimport styles from \"./styles.module.scss\";\n\nexport function CreateCardForm({ setEditIsVisible, setIsModalVisible, callType }) {\n\n\n\n    const [title, setTitle] = useState(\"\");\n    const [year, setYear] = useState(\"\");\n    const [poster, setPoster] = useState(\"\");\n    const [genres, setGenres] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n\n    const unStringifyGenres = (genres) => genres.split(\",\");\n    // const navigate = useNavigate();\n    const location = useLocation();\n    const movieId = location.pathname.split(\"/\").reverse()[0];\n\n    const addNewMovie = (e) => {\n        e.preventDefault();\n\n        if (callType === \"POST\") {\n            POST({\n                title,\n                year,\n                poster,\n                genres: unStringifyGenres(genres),\n                description,\n            });\n            setIsModalVisible({\n                visible: true,\n                content: \"il post Ã¨ stato publicato!\",\n\n            });\n\n\n\n        } else {\n            PUT(movieId, {\n                title,\n                year,\n                poster,\n                genres: unStringifyGenres(genres),\n                description,\n            });\n            setEditIsVisible({\n                visible: true,\n                content: \"Modifica avvenuta con successo!\",\n\n            });\n\n        }\n\n    };\n\n\n\n    return (\n        <div className={styles.CreateCardForm}>\n\n\n            <form onSubmit={addNewMovie} className={styles.form}>\n                <label htmlFor=\"title\">Title:</label>\n                <input\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                    type=\"text\"\n                    id=\"title\"\n                    name=\"title\"\n                    required\n                />\n\n                <label htmlFor=\"year\">Year:</label>\n                <input\n                    value={year}\n                    onChange={(e) => setYear(e.target.value)}\n                    type=\"text\"\n                    id=\"year\"\n                    name=\"year\"\n                    required\n                />\n\n                <label htmlFor=\"poster\">Poster:</label>\n                <input\n                    value={poster}\n                    onChange={(e) => setPoster(e.target.value)}\n                    type=\"text\"\n                    id=\"poster\"\n                    name=\"poster\"\n                    required\n                />\n\n                <label htmlFor=\"genres\">Genres:</label>\n                <input\n                    value={genres}\n                    onChange={(e) => setGenres(e.target.value)}\n                    type=\"text\"\n                    id=\"genres\"\n                    name=\"genres\"\n                    required\n                />\n\n                <label htmlFor=\"description\">Description:</label>\n                <input\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                    type=\"text\"\n                    id=\"description\"\n                    name=\"description\"\n                    required\n                />\n\n                <input type=\"submit\" value=\"Send it!\" />\n            </form>\n        </div>\n    );\n}\n\n"],"names":["AddMovie","props","useState","isModalVisible","setIsModalVisible","navigate","useNavigate","useEffect","value","editSuccess","visible","className","styles","callType","BASE_URL","GET","id","fetch","then","res","json","POST","body","method","headers","JSON","stringify","DELETE","PUT","CreateCardForm","setEditIsVisible","title","setTitle","year","setYear","poster","setPoster","genres","setGenres","description","setDescription","unStringifyGenres","split","movieId","useLocation","pathname","reverse","onSubmit","e","preventDefault","content","htmlFor","onChange","target","type","name","required"],"sourceRoot":""}